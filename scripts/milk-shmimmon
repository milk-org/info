#!/bin/bash

# number of arguments to script
NBARGS=1



function printHELP {
    echo "------------------------------------------------------------------------"
    echo "$(tput bold) $0 : EXAMPLE SCRIPT $(tput sgr0)"
    echo "------------------------------------------------------------------------"
    echo "  Monitor image stream"
    echo "   "
    echo " $(tput bold)USAGE:$(tput sgr0)"
    echo "     $0 [-h] <stream>"
    echo ""
    echo " $(tput bold)OPTIONS:$(tput sgr0)"
    echo "     $(tput bold)-h$(tput sgr0)          help"
    echo ""
    echo " $(tput bold)INPUT:$(tput sgr0)"
    echo "     <stream>     data stream"
    echo ""
    echo "------------------------------------------------------------------------"
}


printHELP1 ()
{
    printf "%20s       Monitor stream\n" "$0"
}


function checkFile {
    if [ -f $1 ]
    then
        echo "[$(tput setaf 2)$(tput bold)   OK   $(tput sgr0)] File $(tput bold)$1$(tput sgr0) found"
    else
        echo "[$(tput setaf 1)$(tput bold) FAILED $(tput sgr0)] File $(tput bold)$1$(tput sgr0) not found"
        EXITSTATUS=1
    fi
}



# ================= OPTIONS =============================




# Transform long options to short ones
singlelinehelp=0
for arg in "$@"; do
    shift
    case "$arg" in
        "--help") set -- "$@" "-h" ;;
        "--help1")
            set -- "$@" "-h"
            singlelinehelp=1;
            ;;
        *)        set -- "$@" "$arg"
    esac
done



while getopts :h FLAG; do
    case $FLAG in
        h)  #show help
            if [ "$singlelinehelp" -eq "0" ]; then
                printHELP
            else
                printHELP1
            fi
            exit
            ;;
        \?) #unrecognized option - show help
            echo -e \\n"Option -${BOLD}$OPTARG${NORM} not allowed."
            printHELP
            ;;
    esac
done

shift $((OPTIND-1))  #This tells getopts to move on to the next argument.

### End getopts code ###




if [ "$1" = "help" ] || [ "$#" -ne $NBARGS ]; then
    if [ "$#" -ne $NBARGS ]; then
        echo "$(tput setaf 1)$(tput bold) Illegal number of parameters ($NBARGS params required, $# entered) $(tput sgr0)"
    fi
    printHELP
    exit
fi


# ======================= CHECK REQUIRED FILES =================================
echo ""
checkFile ${MILK_SHM_DIR}/$1.im.shm



if [ $EXITSTATUS -eq 1 ]; then
    echo ""
    echo "$(tput setaf 1)$(tput bold) REQUIRED FILE NOT FOUND: EXITING $(tput sgr0)"
    echo ""
    exit
else
    echo ""
fi


ttystring=$( tty | tr -d \/ )
pname="shmimmon-$1"
fifoname="$MILK_SHM_DIR/milkCLIfifo.${pname}.${ttystring}"
SF="$MILK_SHM_DIR/milkCLIstartup.${pname}.${ttystring}"

#echo "csetpmove RTmon" >$SF
echo "mload milkinfo" > $SF
echo "readshmim $1" >> $SF
echo "info.imgmon ..procinfo 1" >> $SF
echo "info.imgmon ..triggermode 4" >> $SF
echo "info.imgmon ..triggerdelay 0.01" >> $SF
echo "info.imgmon ..loopcntMax -1" >> $SF
echo "info.imgmon ..RTprio 30" >> $SF
echo "csetpmove RTmon" >> $SF
echo "info.imgmon $1 10" >> $SF
echo "exitCLI" >> $SF
milk -n ${pname} -f ${fifoname} -s ${SF}
rm ${SF}
